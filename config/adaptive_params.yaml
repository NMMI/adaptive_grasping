# Parameters for adaptive_grasping package
# Remember that there can be other important constants that can only be changed
# from the src code.

adaptive_grasping:
  # The topic where the finger touches data is published
  touch_topic_name: "/touching_finger_topic"
  # The following map contains the correspondence between ids and link names
  link_names_map:
    "1" : "soft_hand_thumb_distal_link"
    "2" : "soft_hand_index_distal_link"
    "3" : "soft_hand_middle_distal_link"
    "4" : "soft_hand_ring_distal_link"
    "5" : "soft_hand_little_distal_link"
  # The following map contains other necessary params for adaptive_grasping
  params_map:
    world_name: "world"
    palm_name: "soft_hand_kuka_coupler_bottom"
    ee_name: "soft_hand_kuka_coupler_bottom"
  # The array containing the number of links of each finger
  joints_num: [5, 7, 7, 7, 7]
  # The following list of arrays is the contact selection matrix H (CHANGE ALSO p_vector ACCORDINGLY)
  h_matrix:     # fully constrained
    - [1, 0, 0, 0, 0, 0]
    - [0, 1, 0, 0, 0, 0]
    - [0, 0, 1, 0, 0, 0]
    - [0, 0, 0, 1, 0, 0]
    - [0, 0, 0, 0, 1, 0]
    - [0, 0, 0, 0, 0, 1]
  # The stiffness matrix for the contact forces
  k_matrix:     # fully constrained
    - [0.1, 0, 0, 0, 0, 0]
    - [0, 0.1, 0, 0, 0, 0]
    - [0, 0, 0.1, 0, 0, 0]
    - [0, 0, 0, 0.1, 0, 0]
    - [0, 0, 0, 0, 0.1, 0]
    - [0, 0, 0, 0, 0, 0.1]
  # The following array is the desired x motion
  x_d:
    - [0.2, 0, 0, 0, 0, 0, 0]                   # for simple grasp?
  # The following array is the desired contact force derivative
  f_d_d:
    - [0, 0, 0, 0, 0, 0]
  # The rate of the adaptive loop
  spin_rate: 1000.0
  # The topic where the object pose is published
  object_topic_name: "/object_pose"
  # The topic where the current object twist is published
  object_twist_topic_name: "/object_twist"
  # The scaling factor for the reference motion
  scaling: 1.0
  # The permutation vector for relaxed minimization (the elements of the vector stand for the reordering of the rows of Q) (CHANGE ALSO h_matrix ACCORDINGLY)
  p_vector:
      - [2, 3, 4, 5, 6, 7, 13, 11, 12, 10, 8, 9, 1]              # For RP
  # The vector containing the indexes of the touch constraints
  touch_indexes:
    - [8, 9, 10, 11, 12, 13]
  # The threshold on the synergy joint value for stopping the grasping motion
  syn_thresh: 0.38
  # The bool to decide if null twist should be sent when relaxation occurs
  relax_to_zero: false
  # The bool to decide if to change contact selection when touch occurs (NOT USED NOW)
  touch_change: true
  # The number of tasks for the RP Manger (Excluding contact tasks) (Contact Preserver) if num_tasks == 2 -> basic two tasks relaxation RP
  num_tasks: 3
  # The dimensions of the tasks for the RP Manger (Contact Preserver) (The last ones from the num_task_th element are the ones on touch)
  dim_tasks: [1, 3, 3, 3, 3]  # PLEASE DOUBLE CHECK THIS SO THAT IT COMPLIES WITH prio_tasks
  # The priority of the above defined tasks (The last ones from the num_task_th element are the ones on touch)
  prio_tasks: [1, 4, 5, 2, 3] # first good order # PLEASE DOUBLE CHECK THIS SO THAT IT COMPLIES WITH dim_tasks
#  prio_tasks: [3, 4, 5, 1, 2] # second not bad order (but stucks at 2fingers) # PLEASE DOUBLE CHECK THIS SO THAT IT COMPLIES WITH dim_tasks
#  prio_tasks: [5, 3, 4, 1, 2]  # third order bad (stucks at one finger) PLEASE DOUBLE CHECK THIS SO THAT IT COMPLIES WITH dim_tasks
#  prio_tasks: [2, 4, 5, 1, 3]  # variant of second order bad (no more closing at 2 fingers) PLEASE DOUBLE CHECK THIS SO THAT IT COMPLIES WITH dim_tasks
  # The lambda max for the pseudo inversion in RP Manager
  lambda_max: 0.001
  # The epsilon for the diagonal loading in singular value decomposition in RP Manager
  epsilon: 0.001


